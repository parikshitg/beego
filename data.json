[
    {
        "slug": "what-are-unique-challenges-web-developers-face",
        "title": "What are unique challenges web developers face?",
        "body": "<div>While there are a lot of pros in developing software for use on the web, there are some cons as well. These can be unique challenges to a web developer.<br><br></div><div><h5>Load times</h5></div><div>Do you ever go to a website and it takes forever to load? What is your reaction? We usually get frustrated and leave. In fact, most users will leave a site if it does not load for them in 15 seconds or less! As mentioned earlier, connection speed is a large hurdle to overcome when dealing with web development. A user’s speed can range from very fast (Fiber optic) to slow (mobile 3G or satellite). It is our job as web developers to take ALL users into account. Therefore, we learn tricks to keep users engaged while our code is being downloaded, and learn to keep our code small so it can be easily downloaded.<br><br></div><div><h5>Different Browsers</h5></div><div>Not only do we have to worry about load times, but also differences in browser technology. Mobile browsers are different than desktop (or laptop) browsers. Older browsers (many computers still use Windows XP and IE9) are extremely different than newer browsers, and developing for each provides a unique challenge. Ultimately you will need to make sacrifices and not support some browsers (which is a call marketing department will make) but you should be able to code for the browser you do support.<br><br></div><div><h5>Accessibility</h5></div><div>If you are not a person that uses an accessibility device to consume software on the web, then you may have no idea these exist. Screen readers, alternative keyboards/navigation devices, devices for the hearing impaired, the color blind, font sizes for visually impaired people, are all concepts that we tend to not think about. As a web developer, you will need to start thinking about these users not only from a human decency perspective, but also because these users make up a non-insignificant market share. There are also legal issues that require accessibility.<br><br></div>",
        "date": "Nov 12, 2019",
        "author": "Mahendra Choudhary",
        "image": "/img/data/1.jpeg",
        "categories": [
            "Web Development"
        ],
        "tags": [
            "Web Development"
        ]
    },
    {
        "slug": "what-is-web-development",
        "title": "WHAT IS WEB DEVELOPMENT?",
        "body": "<div>Web development is a specific field of software engineering that focuses on building web pages. Web pages, or web apps, are codebases that are downloaded and run in our web browser (e.g., Google Chrome) each time a user navigates to the website address. This differs from other software which is usually downloaded once and run as a standalone application on your computer or phone. Web development makes for an exciting career, as a web development cycle is usually much shorter and you get to iterate over your software at a much faster rate.<br><br></div><div>The major building blocks of the web are HTML, CSS, and JavaScript. We will be talking about all three languages. We can also think of web development as being split into two main categories: front end and back end. We will discuss what each entails.<br><br></div><div><strong><br>What is meant by the term front end?<br></strong><br></div><div>Everything you have ever seen on the web is considered ‘front end’. Front end is what we see when we open a web page or app. Code is downloaded from a server and is rendered to the screen by a web browser. What happens when we interact with the code is also considered front end. This is often referred to as the ‘Presentation Layer’ or ‘Client’ in software development terms. The front end is built out of three languages: HTML, CSS, and JavaScript. HTML allows us to put content on our page: text, headers, images, buttons, links, and etc. CSS is used to style our page. It allows the contents to have different text colors, background colors, as well as dealing with the positioning of the content on the page. JavaScript makes our page dynamic. It allows for the content to change on a mouse hover or click and also lets us submit data and have data rendered on our page (such as submitting a new blog post or having your feed populated when you open Facebook).<br><br></div><div><strong><br>What is meant by the term back end?<br></strong><br></div><div>This term usually refers to what happens ‘behind the scenes’: servers, databases, etc. The back end is the place we don’t see as users. This consists of data storage (databases) and servers running to provide data for the front end. Back end can be a little harder to imagine, especially for someone without much experience with it. Back end is commonly referred to as the ‘data access layer’ or ‘server’ within software development terms. The back end computes the data and content sent to the front end to be used and displayed by your browser. Back end server code can be written using JavaScript. However, it can be also written using many other languages, such as Ruby, Java, or Python. The database logic required in back end development often utilize a database language, such as SQL or MongoDB.<br><br></div>",
        "date": "Nov 23, 2019",
        "author": "Mahendra Choudhary",
        "image": "/img/data/2.jpeg",
        "categories": [
            "Web Development"
        ],
        "tags": [
            "Web Development",
            "Software",
            "Database"
        ]
    },
    {
        "slug": "dns-records-simplified",
        "title": "DNS records simplified",
        "body": "<div>Confused by A, CNAME, ALIAS and all the sort of records??<br><br></div><div>Getting confused is easy. Let's try to go to the base of it and explain them one by one.<br><br></div><div><strong>Domain Name System (DNS)</strong> is the way search engines translate your website to the server address. which means translating a domain such as example.com to its IP address to communicate to.<br><br></div><div>When you register a domain there are multiple types of Domain Name Service Records you can set up.<br><br></div><div>Each of these records has a Type, a Hostname and a Value<br><br></div><ul><li>”Types” are Predefined</li><li>“Host” represents the root(@) or a sub domain (www,test etc)</li><li>“Value” is an IP or Web address or a text value.</li></ul><div><strong><br>A Record<br></strong><br></div><div>Maps a subdomain to its corresponding IPv4 address. It is most commonly used at the root, and tells the browser where example.com lives.<br><br></div><div><strong><br>AAAA Record<br></strong><br></div><div>Its the IPv6 equivalent of an A Record.<br><br></div><div><strong><br>CNAME<br></strong><br></div><div>Maps a subdomain to another domain. This can be a subdomain in the same site(www to root) or a totally different website such as an AWS Service or a Heroku instance where you run your app.CNAME however has a major disadvantage. Once a CNAME is defined for a subdomain no other records can be defined for the same subdomain. CNAME implemented at root i.e(@) means you no longer can use any other records with the root domain.<br><br></div><div><strong><br>ALIAS or ANAME<br></strong><br></div><div>It is the workaround to a CNAME for subdomains that require other records to exist. ALIAS or ANAME is exactly like a CNAME except it is a non-standard DNS Type and allows other records such as TXT &amp; MX to exist.<br><br></div><div><strong><br>TXT Record<br></strong><br></div><div>It is a record that can pass extra information to a computer reading this DNS Record. It can be utilized to prove you own a domain as it can only be set up by the person with root-level/Owner level access to the configurator.<br><br></div><div><strong><br>MX Record<br></strong><br></div><div>It is a Mail eXchange Record used to specify that other servers such as Google or Microsoft exchange are used to manage and handle your emails. MX records are unique and have options to point to multiple servers depending on the priority of each independent record.<br><br></div><div>The above said is the most commonly used DNS records the other types of records that exist are very rarely or never used in normal day to day use cases. For each of the above records, we also specify a TTL (Time To Live) it basically tells the server, how long to cache DNS Values. TTL is one of the reasons why new domain records take time to propagate and be valid. DNS Servers, ISP’s and even system cache DNS records and keep serving old values till the TTL runs out and the server fetches the new records.<br><br></div>",
        "date": "Oct 30, 2020",
        "author": "Naeem Hadiq",
        "image": "/img/data/3.jpeg",
        "categories": [
            "Web Development"
        ],
        "tags": [
            "DNS",
            "Name Server"
        ]
    },
    {
        "slug": "what-is-flutter",
        "title": "What is Flutter?",
        "body": "<div>Flutter is an open-source mobile SDK developer can use to build native-looking Android and iOS applications from the same code base. Flutter has been around since 2015 when Google introduced it and remained in the beta stage before its official launch in December 2018. Since then, the buzz around Flutter has been growing stronger.<br><br></div><div>Flutter is now the top 11 software repos based on GitHub stars. Moreover, we’ve already seen thousands of Flutter apps being published on app stores. One of the most notable examples is the Xianyu app created by Alibaba team, used by over 50 million people.<br><br></div><div><strong><br>Benefits of Flutter<br></strong><br></div><div><strong><br>It saves you time and money<br></strong><br></div><div>Flutter is a cross-platform development tool. That means software developers can use the same code base for building an iOS and Android app. Cross-platform development is the best method for saving time and resources throughout the development process.<br><br></div><div><strong><br>Excellent performance<br></strong><br></div><div>Flutter offers outstanding performance for two reasons. First, is uses Dart, which compiles into native code. Second, Flutter has its own widgets, so there’s no need to access OEM ones. As a result, there’s less communication between the app and the platform. These two features of Flutter ensure fast app startup times and fewer performance issues in general.<br><br></div><div><strong><br>Quick development thanks to hot reload<br></strong><br></div><div>Flutter is gaining a lot of traction among mobile developers because of hot reload. Hot reload allows to instantly view the changes applied to the code on emulators, simulators, and hardware. The changed code is reloaded in less than a second. All the while, the app is running and developers don’t need to waste time on restarting it.<br><br></div><div>That makes building UIs, adding new features, and fixing bugs easier. If an app encounters an error, it’s usually possible to fix it and then continue using the app as if it never happened. Even if you’re forced to do a full app reload, you can be sure that it’s completed in no time, accelerating the development process.<br><br></div><div><strong><br>Open-source<br></strong><br></div><div>Flutter is an open-source technology surrounded by an active community of developers who provide support, contribute to the tool’s extensive documentation, and develop helpful resources. Both Dart and Flutter are free to use.<br><br></div>",
        "date": "August 26, 2019",
        "author": "Concise Software",
        "image": "/img/data/4.jpeg",
        "categories": [
            "Mobile App",
            "Flutter"
        ],
        "tags": [
            "Flutter",
            "MobileApp"
        ]
    },
    {
        "slug": "flutter-the-future-of-mobile-app-development",
        "title": "Flutter: The Future Of Mobile App Development",
        "body": "<div>I dabbled a bit in Android and iOS development quite a few years back using Java and Objective-C. After spending about a month working with both of them, I decided to move on. I just couldn’t get into it.<br><br></div><div>But recently, I learned about Flutter and decided to give mobile app development another shot. I instantly fell in love with it as it made developing multi-platform apps a ton of fun. Since learning about it, I’ve created an app and a library using it. Flutter seems to be a very promising step forward and I’d like to explain a few different reasons why I believe this.<br><br></div><div><strong><br>Powered by Dart<br></strong><br></div><div>Flutter uses the Google-developed Dart language. If you’ve used Java before, you’ll be fairly familiar with the syntax of Dart as they are quite similar. Besides the syntax, Dart is a fairly different language.<br><br></div><div>I’m not going to be talking about Dart in depth as it’s a bit out of scope, but I’d like to discuss one of the most helpful features in my opinion. This feature being support for asynchronous operations. Not only does Dart support it, but it makes it exceptionally easy.<br><br></div><div>This is something you’ll most likely be using throughout all of your Flutter applications if you’re doing IO or other time-consuming operations such as querying a database. Without asynchronous operations, any time-consuming operations will cause the program to freeze up until they complete. To prevent this, Dart provides us with the async and await keywords which allow our program to continue execution while waiting for these longer operations to complete.<br><br></div><div><strong><br>Write Once, Run on Android and iOS<br></strong><br></div><div>Developing mobile apps can take a lot of time considering you need to use a different codebase for Android and iOS. That is unless you use an SDK like Flutter, where you have a single codebase that allows you to build your app for both operating systems. Not only that, but you can run them completely natively. This means things such as scrolling and navigation, to name a few, act just like they should for the OS being used. To keep with the theme of simplicity, as long as you have a device or simulator running, Flutter makes building and running your app for testing as simple as clicking a button.<br><br></div><div><strong><br>UI Development<br></strong><br></div><div>UI development is one of those things that I almost never look forward to. I’m more of a backend developer, so when it comes to working on something that is heavily dependent on it, I want something simple. This is where Flutter shines in my eyes. UI is created by combining different widgets together and modifying them to fit the look of your app. You have near full control over how these widgets display, so you’ll always end up with exactly what you’re looking for. For laying out the UI, you have widgets such as Row, Column, and Container. For content, you have widgets like Text and RaisedButton. This is only a few of the widgets Flutter offers, there are a lot more.<br><br></div><div><strong><br>Libraries<br></strong><br></div><div>Flutter provides a lot of great features out of the box, but there are times when you need a bit more than it offers. This is no problem at all considering the extensive number of libraries available for Dart and Flutter. Interested in putting ads in your app? There’s a library for that. Want new widgets? There are libraries for that.<br><br></div><div>If you’re more of a do-it-yourselfer, make your own library and share it with the rest of the community in no time at all. Adding libraries to your project is simple and can be done by adding a single line to your pubspec.yaml file.<br><br></div><div>After adding it to the file, run flutter packages get and you're good to go. Libraries make developing Flutter apps a breeze and save a lot of time during development.<br><br></div><div><strong><br>Final Thoughts<br></strong><br></div><div>With Flutter, the possibilities are practically endless, so even super extensive apps can be created with ease. If you develop mobile apps and have yet to give Flutter a try, I highly recommend you do as I’m sure you’ll fall in love with it as well. After using Flutter for quite a few months, I think it’s safe to say that it’s the future of mobile development. If not, it’s definitely a step in the right direction.<br><br></div>",
        "date": "May 20, 2019",
        "author": "Eric Grandt ",
        "image": "/img/data/5.jpeg",
        "categories": [
            "Flutter",
            "Mobile App"
        ],
        "tags": [
            "Flutter",
            "Android",
            "iOS"
        ]
    },
    {
        "slug": "a-simplified-introduction-to-dart",
        "title": "A Simplified Introduction to Dart",
        "body": "<div><strong>What is Dart?<br></strong><br></div><div>Google had its first ever release of Flutter 1.0 last December, after having it in beta mode for over 18 months. Dart is the programming language used to code Flutter apps. Dart is another product by Google and released version 2.1, before Flutter, in November. As it is starting out, the Flutter community is not as extensive as ReactNative, Ionic, or Xamarin. A while back, I discovered a liking for JavaScript. I was ecstatic to be working on a ReactNative mobile app for my internship. I enjoy coding hybrid mobile apps too, so wanted to give Flutter a try, as I had done Xamarin sometime last year. At my first glance of Flutter (and Dart), I felt befuddled and couldn’t seem to understand anything. They even had a section on their docs for developers moving from React Native. So, I took to digging deeper on all things Dart.<br><br></div><div>Dart looks a bit like C and is an object-oriented programming language. So, if you prefer the C languages or Java, Dart is the one for you, and you’ll likely be proficient in it. Dart is not only used for mobile app development but is a programming language. Approved as a standard by Ecma (ECMA-408), it’s used to build just about anything on the web, servers, desktop and of course, mobile applications (Yes, the same people who standardized our favorites ES5 and ES6.)<br><br></div><div>Dart, when used in web applications, is transpiled to JavaScript so it runs on all web browsers. The Dart installation comes with a VM as well to run the .dart files from a command-line interface. The Dart files used in Flutter apps are compiled and packaged into a binary file (.apk or .ipa) and uploaded to app stores.<br><br></div><div><strong><br>What does coding in Dart look like?<br></strong><br></div><div>1. The entry point of a Dart class is the main() method. This method acts as a starting point for Flutter apps as well.<br><br></div><div>2. The default value of most data types is null.<br><br></div><div>3. Dart classes only support single inheritance. There can be only one superclass for a particular class but it can have many implementations of Interfaces.<br><br></div><div>4. The flow control of certain statements, like if conditions, loops (for, while and do-while), switch-case, break and continue statements are the same.<br><br></div><div>5. Abstraction works in a similar manner, allowing abstract classes and interfaces.<br><br></div><div><strong><br>Unlike them (and sometimes a bit like JavaScript)<br></strong><br></div><div>1. Dart has type inference. The data type of a variable need not be explicitly declared, as Dart will “infer ”what it is. In Java, a variable needs to have its type explicitly given during declaration. For example, String something;. But in Dart, the keyword is used instead like so, var something;. The code treats the variable according to whatever it contains, be it a number, string, bool or object.<br><br></div><div>2. All data types are objects, including numbers. So, if left uninitialized, their default value is not a 0 but is instead null.<br><br></div><div>3. A return type of a method is not required in the method signature.<br><br></div><div>4. The type num declares any numeric element, both real and integer.<br><br></div><div>5. The super() method call is only at the end of a subclass’s constructor.<br><br></div><div>6. The keyword new used before the constructor for object creation is optional.<br><br></div><div>7. Method signatures can include a default value to the parameters passed. So, if one is not included in the method call, the method uses the default values instead.<br><br></div><div>8. It has a new inbuilt data type called Runes, that deal with UTF-32 code points in a string. For a simple example, see emojis and similar icons.<br><br></div>",
        "date": "April 1, 2023",
        "author": "Jon Doe",
        "image": "/img/data/6.jpeg",
        "categories": [
            "Flutter",
            "Dart"
        ],
        "tags": [
            "Dart",
            "Mobile",
            "Flutter"
        ]
    },
    {
        "slug": "different-types-of-web-hosting-explained",
        "title": "Different Types of Web Hosting Explained",
        "body": "<div>Websites are hosted (or stored) on special computers called servers, which act as storerooms for data. Web hosting, then, is the process of purchasing space on a remote server (or servers) to house your website or application on the internet.<br><br></div><div>Still confused? Think of it this way: If your website were a house, then your domain name would be its address, and the hosting server(s) would be the plot of land beneath it. To press the analogy even further, hosting plans are similar to house rentals in that users pay “rent” (or a hosting fee) each month in order to keep their servers running and their sites online. There are a ton of different types of hosting plans available. Keep reading to explore each type of hosting solution in depth.<br><br></div><div><strong><br>All-in-One Website Builders<br></strong><br></div><div>One of the simplest ways of purchasing web hosting is through an all-in-one website builder platform like SquareSpace, Wix, or Webflow. Typically, these platforms will allow you to purchase a domain name, create a website, and host that site all from a single interface.<br><br></div><div>In addition, Webflow offers fantastic cloud-based hosting through Amazon Web Services (AWS) and a lightning-fast content delivery network (CDN) powered by Fastly and Amazon Cloudfront. This CDN allows your site files to be served from a location close to where your visitors are located — ensuring quick load times and a pleasant user experience. This plan also features automated backups and versioning, custom site search, and password protection all for just $12 per month.<br><br></div><div><strong><br>Shared Hosting Plans<br></strong><br></div><div>This is the type of hosting service with which you’re probably most familiar, as it is by far the most common. Under shared hosting plans, your website will be stored on the same server as hundreds (if not thousands) of other websites.<br><br></div><div>Most of these servers are based on the Linux operating system and the LAMP (Linux, Apache, MySQL, and PHP) stack. However, some providers also offer Windows- or FreeBSD-based solutions. All domains on the server will share the same resources, such as memory, computing power, and disk space. And for this reason, hosting fees are typically low.<br><br></div><div>Bluehost offers a “Basic” shared hosting plan for $7.99 per month, while HostGator’s similar “Hatchling” plan costs $6.95 per month. While these plans are undeniably cheap, they also come with a few notable drawbacks. For example, shared hosting plans typically come along with limited bandwidth, administration, and performance capabilities, which render them unsuitable for large sites with large amounts of traffic.<br><br></div><div>Also, when one shared hosting customer makes a mistake or experiences a technical difficulty, all of the other sites on the server will likely be impacted as they are all sharing space (and resources) on the same machine. This type of hosting plan is often well-suited for solopreneurs and other cost-conscious small business owners with small sites and modest amounts of traffic. Larger, and more established businesses, might look to more robust options like those listed below.<br><br></div><div><strong><br>Virtual Private Server (VPS) Hosting<br></strong><br></div><div>A VPS (or virtual private server) is just what it sounds like. With this type of hosting solution, you’ll enjoy many of the benefits associated with your own dedicated server within a shared hosting environment.<br><br></div><div>This means that you’ll have full control over the operating system running on your server, the software installed, and all of their settings. And while each server will host multiple VPS clients, each VPS will be allocated its own share of key resources, such as memory and storage space. The cost associated with VPS hosting typically fall between that of shared and dedicated hosting.<br><br></div><div><strong><br>Dedicated Hosting<br></strong><br></div><div>A dedicated server is probably outside the scope of reason for most readers. However, for the sake of comprehensiveness, I’ve decided to include it here. With a dedicated hosting plan, you’ll be given an entire server all to yourself — an absolute must for popular, high-traffic websites.<br><br></div><div>As might be expected, you’ll be paying a pretty penny for this type of hosting.<br><br></div><div><strong><br>Cloud-Based Hosting<br></strong><br></div><div>As the most complex web hosting solution, cloud hosting is not for everyone. Simple WordPress sites will be likely better off with an inexpensive shared hosting plan. However, this solution has a lot to offer those with more ambitious projects.<br><br></div><div>Cloud-based hosting plans spread the resources that your site needs to operate across multiple servers, which are collectively referred to as “the cloud.” Within such a framework, there is much less chance of server malfunction or “downtime,” because if one particular server happens to fail, another can quickly step in to take its place. In addition, the extra support allows for large volumes of traffic without significant bandwidth issues.<br><br></div><div>Because of the sheer amount of complexity and technical knowhow involved in maintaining a cloud-based server, these hosting plans are relatively inexpensive — however, sizeable amounts of traffic or bandwidth needs can easily scale up the cost.<br><br></div><div><strong><br>So what’s the final verdict?<br></strong><br></div><div>Small, solo operations with basic WordPress websites will most likely be fine with an all-in-one solution or a shared hosting plan purchased from an established hosting provider like HostGator.<br><br></div><div>Those with larger footprints, or with more demanding traffic and/or bandwidth needs, might look toward either VPS hosting or cloud-based hosting depending on their budget and the needs of their businesses.<br><br></div><div>And only the largest and most established of business ventures should be considering dedicated web hosting.<br><br></div>",
        "date": "Nov 8, 2018",
        "author": "Alex Sanchez-Olvera",
        "image": "/img/data/7.jpeg",
        "categories": [
            "Hosting"
        ],
        "tags": [
            "Hosting"
        ]
    },
    {
        "slug": "what-is-web-hosting-and-how-it-works",
        "title": "What Is Web Hosting and how it works?",
        "body": "<div>Web hosting is a term coined for the service for hosting websites. There are numerous web hosting services and are of various kinds. Like you can host website on your own server or you can buy a hosting space from some host.<br><br></div><div><strong><br>What is a web hosting?<br></strong><br></div><div>Hosting is not much different than running a website on a local machine. When we say hosting services gives space it actually means they give you a machine, can be a virtual machine, just like your computer but the difference is that machine has a public IP. So when, any computer on internet request for the some domain, dns lookup send the IP to your computer and then browser sends the request to that IP.<br><br></div><div><strong><br>How it works?<br></strong><br></div><div>You buy a space from host, which gives you an environment(OS) pre installed, *NIX or Windows, you run the Apache, web server, as you do on your local computer. Of course you need to change some configuration, not going in details question for some another day. You buy a domain, point it to this IP address. Thats pretty much it in a very simple language.<br><br></div><div>practically: web hosting is transferring your local files (website developed) to a remote site or server (hosting server) and if there’s database use, configuring the database provided on the hosting platform and importing the local database into the hosting server’s database provided for you. also hosting servers are just remote servers on the internet that mapped to a particular domain record. in most cases the A-record of the domain maps to the address of the hosting record so that when users type website address, the domain is resolved and your content shows on the user browser.<br><br></div>",
        "date": "Jan 2, 2018 ",
        "author": "Visual Modo",
        "image": "/img/data/9.jpeg",
        "categories": [
            "Hosting"
        ],
        "tags": [
            "Hosting"
        ]
    },
    {
        "slug": "sikkim’s-journey-on-becoming-the-first-100-organic-farming-state",
        "title": "Sikkim’s journey on becoming the first 100% Organic Farming State",
        "body": "<div>stainable situation. But could the best way to preserve our water supplies, be with organic farming? Organic soil is better able to hold onto water because it uses organic material. Therefore, plants have more access to water, and they produce more food.<br><br></div><div><strong><br>A way to make organic food cheap<br></strong><br></div><div>Organic food sometimes costs more. But experts say the way to make organic food cheap is to get everybody on board. One entrepreneur in India who has experience in agriculture put it like this:<br><br></div><div>“What happens ordinarily in organic is that a retailer deals with small quantities from a wide range of farmers. The supply chain is broken and disorganized. This adds to the cost of produce.<br><br></div><div>When a state is 100% organic, then the costs that go into segregating, packaging, labelling, and differential pricing, are saved. When everything is organic, the price automatically falls.”<br><br></div><div><strong><br>How Sikkim is benefitting from becoming an organic state<br></strong><br></div><div>Sikkim’s transition to an organic state is good for public health and the environment in the area. It’s also good for the economy. Tourism to the area is also increasing and bringing in more money. Guests can stay in organic villages, where they are able to enjoy the abundant natural beauty and eat fresh, organic meals.<br><br></div><div>Sikkim organic retail stores offering pulses, rice, mandarin oranges, ginger, cardamom, and turmeric have been set up by the government in New Delhi. More stores are planned for other major cities. Due to the surge in demand for Sikkim’s organic produce, farmers are now earning 20%more.<br><br></div><div><strong><br>How Sikkim’s achievement affects the world<br></strong><br></div><div>India is a place with high rates of pesticide use. As a result, it is a nation tragically marked by very high rates of farmer suicides; of children dying from pesticide-laced school lunches; and of trains of people with pesticide-related cancer. But Sikkim can serve as a model to help other states go organic.<br><br></div><div>Already, this is happening.<br><br></div><div>One of the goals behind Sikkim’s Organic Festival in January was to spread the message of organic movement to other states.<br><br></div><div>The prime minister encouraged other states in India to follow Sikkim’s example. He invited them to try organic farming and see what happens.<br><br></div><div>“If the experiment succeeds,” he said. “Farmers in other places will follow it on their own. Farmers may not be influenced by any amount of lectures by scientists…For them, seeing believes.”<br><br></div><div>Indian states, including Kerala, Mizoram, and Arunachal Pradesh are already working towards becoming organic. And in a country where pesticides are still in use that have been banned in more than 67 countries, any increase in organic farming will make a positive difference. Of course, the growth of organic farming is needed not only in India but throughout the world. Gratefully, Sikkim is not the only place seeing success with organic food. For example, in Cuba, large-scale organic farming exists, although it began out of necessity, due to a trade embargo with other nations. Denmark has ambitious plans to become an organic country. And a growing number of farms in the U.S. are organic success stories.<br><br></div><div>Organic food sales in the U.S. have been increasing every year since the 1990s, and the trend is continuing. In 2015, organic food sales in the U.S. neared an estimated $37 billion, up 12% from the previous year. And when even more people demand organic food, more farmers will produce it, and prices will go down.<br><br></div><div>If we want a world with less toxic food, a world that is safer for our health, our environment, and our climate, we have a lot more progress to achieve. And everyone can play a role if you choose to take action and support organic. Whether you’re a farmer or a consumer, you can make a difference.<br><br></div><div>As the Indian prime minister said: “Sikkim has shown the way and what we are seeing today is the result of tremendous hard work and belief in an idea.”<br><br></div><div>Increasing organic agriculture around the world won’t be easy. But it will be worth it.<br><br></div>",
        "date": "Dec 6, 2017",
        "author": "Shyam Sundar Reddy ",
        "image": "/img/data/9.jpeg",
        "categories": [
            "Organic"
        ],
        "tags": [
            "Travel",
            "Agriculture"
        ]
    },
    {
        "slug": "cook-your-own-meals",
        "title": "COOK YOUR OWN MEALS",
        "body": "<div>One of the best ways you can stick to your budget is to make your own food instead of eating out every night. If the average (reasonably healthy) dinner for two at a restaurant costs between $30 and $60 or more depending on where you live, multiply that by seven nights, and you’re now between $210 and $420. That’s for just one of your three meals a day.<br><br></div><div>On the other hand, if you can cook (even if it’s not great), the grocery bill for a family of four for seven days of breakfast, lunch, dinner, and snacks, can fall around $200 to $300 a week if you shop efficiently.<br><br></div><div>If you’re like me and don’t believe you can cook anything more than a bowl of cereal, it’s worth it to take the time to learn and practice. You don’t have to go to culinary school, there are plenty of how-to videos on YouTube for free. Start small with slight modifications to things you can already make. If you know how to scramble some eggs, try experimenting with seasonings or maybe add a little ham and cheese to the mix. You can even build a foundation by practicing basics such as soft-boiling an egg or baking a potato without worrying about an entire meal. Of course, if you want to take a cooking class, it can be a fun experience for you and a friend or partner.<br><br></div><div>Whether you can cook or not, it’s important to remember that when you buy groceries to prepare your own meals, plan ahead. If you just buy the ingredients you need for one meal, it’s tremendously more expensive than if you plan on using similar ingredients for multiple meals and can spread the cost. This also helps reduce waste because using a bulb of garlic across the whole week means you don’t just use one or two cloves and let the rest go bad. Make a weekly calendar of meals and see if you can find different ways to use the same ten to twenty ingredients<br><br></div><div>You can even spread the cooking workload by grilling more chicken than you need one night, so you cut up and refrigerate the rest for tomorrow’s lunch salad. A little planning goes a long way for both your wallet and your time.<br><br></div>",
        "date": "Nov 15, 2017",
        "author": "Matt Longmire",
        "image": "/img/data/10.jpeg",
        "categories": [
            "cooking"
        ],
        "tags": [
            "food",
            "cooking"
        ]
    },
    {
        "slug": "my-love-for-cooking-—-5-reasons-why",
        "title": "My Love for Cooking — 5 Reasons Why",
        "body": "<div>One of the best ways you can stick to your budget is to make your own food instead of eating out every night. If the average (reasonably healthy) dinner for two at a restaurant costs between $30 and $60 or more depending on where you live, multiply that by seven nights, and you’re now between $210 and $420. That’s for just one of your three meals a day.<br><br></div><div>On the other hand, if you can cook (even if it’s not great), the grocery bill for a family of four for seven days of breakfast, lunch, dinner, and snacks, can fall around $200 to $300 a week if you shop efficiently.<br><br></div><div>If you’re like me and don’t believe you can cook anything more than a bowl of cereal, it’s worth it to take the time to learn and practice. You don’t have to go to culinary school, there are plenty of how-to videos on YouTube for free. Start small with slight modifications to things you can already make. If you know how to scramble some eggs, try experimenting with seasonings or maybe add a little ham and cheese to the mix. You can even build a foundation by practicing basics such as soft-boiling an egg or baking a potato without worrying about an entire meal. Of course, if you want to take a cooking class, it can be a fun experience for you and a friend or partner.<br><br></div><div>Whether you can cook or not, it’s important to remember that when you buy groceries to prepare your own meals, plan ahead. If you just buy the ingredients you need for one meal, it’s tremendously more expensive than if you plan on using similar ingredients for multiple meals and can spread the cost. This also helps reduce waste because using a bulb of garlic across the whole week means you don’t just use one or two cloves and let the rest go bad. Make a weekly calendar of meals and see if you can find different ways to use the same ten to twenty ingredients<br><br></div><div>You can even spread the cooking workload by grilling more chicken than you need one night, so you cut up and refrigerate the rest for tomorrow’s lunch salad. A little planning goes a long way for both your wallet and your time.<br><br></div>",
        "date": "Aug 17, 2017",
        "author": "Vijini Mallawaarachchi",
        "image": "/img/data/11.jpeg",
        "categories": [
            "cooking"
        ],
        "tags": [
            "food",
            "cooking"
        ]
    },
    {
        "slug": "top-travel-essentials",
        "title": "Top Travel Essentials",
        "body": "<div>People are always looking for ways to make their lives simpler and more convenient, especially when it comes to travel. One of the keys to traveling is packing light, however, it is absolutely essential to carry all the essentials. We always remember our daily necessities like chargers, laptops, selfie sticks, cameras, iPods, etc., but tend to forget not-so-common yet very important things.<br><br></div><div>I have created a list of things that I feel are very important:<br><br></div><ul><li><strong>If you are an Adventurer</strong> — A GoPro camera to carry with you to capture all your rafting, skydiving, trekking, bungee jumping, etc. experiences to create memories for yourself and to also share with others.</li><li><strong>Toiletry/Makeup Bags</strong> — It is always recommended to pack different bags/pouches for medicines, makeup, in-flight essentials, and toiletries.</li><li><strong>Multi-Country Travel Adapter with USB Sockets</strong> — It’s one of those things that are vital yet most of us always forget (tip: keep it in your suitcase so it’s always there!). Rather than having to find out what type of plug the country you are visiting has, just take a multi-travel adapter so that no matter what country you are from or wherever you are traveling to its bound to fit.</li><li><strong>Laundry Bag</strong>— It helps you to separate worn clothes from unworn clothes. Also, if you are planning a long trip and traveling light it can be a great savior.</li><li><strong>Scarf/Light Jacket</strong>— Always carry a scarf or a light jacket along for any weather uncertainties that may arise. It can serve as a great accessory and at the same time be extremely versatile.</li></ul>",
        "date": "May 10, 2017 ",
        "author": "Hiral Kapadia",
        "image": "/img/data/12.jpeg",
        "categories": [
            "Travel"
        ],
        "tags": [
            "Travel"
        ]
    }
]